-- MySQL Script generated by MySQL Workbench
-- Mon May 26 18:56:47 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema sql_blog_audit
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sql_blog_audit` ;

-- -----------------------------------------------------
-- Schema sql_blog_audit
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sql_blog_audit` ;
SHOW WARNINGS;
USE `sql_blog_audit` ;

-- -----------------------------------------------------
-- Table `sql_blog_audit`.`employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sql_blog_audit`.`employee` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sql_blog_audit`.`employee` (
  `employee_id` BIGINT NULL DEFAULT NULL AUTO_INCREMENT,
  `first_name` TEXT NULL DEFAULT '',
  `last_name` TEXT NULL DEFAULT '',
  `email_address` TEXT NOT NULL,
  `version` INT NOT NULL DEFAULT 1,
  `last_updated` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `last_updated_by` TEXT NOT NULL,
  PRIMARY KEY (`employee_id`),
  UNIQUE INDEX `uq_employee_email_address` (`email_address` ASC))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `sql_blog_audit`.`employee_audit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sql_blog_audit`.`employee_audit` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `sql_blog_audit`.`employee_audit` (
  `employee_id` BIGINT NULL DEFAULT NULL,
  `first_name` TEXT NULL DEFAULT NULL,
  `last_name` TEXT NULL DEFAULT NULL,
  `email_address` TEXT NULL DEFAULT NULL,
  `version` INT NOT NULL,
  `last_updated` DATETIME NOT NULL,
  `last_updated_by` TEXT NOT NULL,
  PRIMARY KEY (`employee_id`, `version`),
  UNIQUE INDEX `uq_employee_audit_version` (`employee_id` ASC, `version` ASC),
  CONSTRAINT `fk_employee_audit_employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `sql_blog_audit`.`employee` (`employee_id`)
    ON DELETE CASCADE)
ENGINE = InnoDB;

SHOW WARNINGS;
USE `sql_blog_audit`;

DELIMITER $$

USE `sql_blog_audit`$$
DROP TRIGGER IF EXISTS `sql_blog_audit`.`employee_audit_info_insert` $$
SHOW WARNINGS$$
USE `sql_blog_audit`$$
CREATE TRIGGER employee_audit_info_insert
BEFORE INSERT
    ON employee FOR EACH ROW
BEGIN
    SET new.last_updated = CURRENT_TIMESTAMP, new.last_updated_by = CURRENT_USER;
END$$

SHOW WARNINGS$$

USE `sql_blog_audit`$$
DROP TRIGGER IF EXISTS `sql_blog_audit`.`employee_audit_insert` $$
SHOW WARNINGS$$
USE `sql_blog_audit`$$
CREATE TRIGGER employee_audit_insert
AFTER INSERT
    ON employee FOR EACH ROW BEGIN
INSERT INTO
    employee_audit(employee_id, first_name, last_name, email_address, version, last_updated, last_updated_by)
values
    (new.employee_id, new.first_name,  new.last_name, new.email_address, new.version, new.last_updated, new.last_updated_by);
END$$

SHOW WARNINGS$$

USE `sql_blog_audit`$$
DROP TRIGGER IF EXISTS `sql_blog_audit`.`employee_audit_info_update` $$
SHOW WARNINGS$$
USE `sql_blog_audit`$$
CREATE TRIGGER employee_audit_info_update
BEFORE UPDATE
    ON employee FOR EACH ROW
BEGIN
    SET new.version = old.version+1, new.last_updated = CURRENT_TIMESTAMP, new.last_updated_by = CURRENT_USER;
END$$

SHOW WARNINGS$$

USE `sql_blog_audit`$$
DROP TRIGGER IF EXISTS `sql_blog_audit`.`employee_audit_update` $$
SHOW WARNINGS$$
USE `sql_blog_audit`$$
CREATE TRIGGER employee_audit_update
AFTER UPDATE
    ON employee FOR EACH ROW BEGIN
INSERT INTO
    employee_audit(employee_id, first_name, last_name, email_address, version, last_updated, last_updated_by)
values
    (new.employee_id, new.first_name,  new.last_name, new.email_address, new.version, new.last_updated, new.last_updated_by);
END$$

SHOW WARNINGS$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
